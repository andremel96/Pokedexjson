body {
    background-color: #58585a;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 50vh 50vh;
    grid-gap: 0;
  }
  
  .ball-top {
    background-color: #f03f35;
    border-bottom: 5vh solid #58585a;
  }
  
  .flex {
    grid-column:1;
    grid-row:2;
    z-index:1;
    display: flex;
    justify-content: center;
  }
  
  .ball-center {
    background-color: #ffffff;
    border-radius: 99999px;
    width: 10vw;
    border: 10vh solid #58585a;
    
    height: 10vw;
    margin-top: -5vw;
  }
  
  .ball-bottom {
    grid-row:2;
    grid-column:1;
    background-color: #f5f5f5;
    border-top: 5vh solid #58585a;
  }

  .poke-list {
    width: 100%;
    height: 250px;
    margin-top: 40px;
    position: relative;
}
.pre-btn,
.nxt-btn {
    position: absolute;
    height: 200px;
    top: 50%;
    transform: translateY(-50%);
    width: 2.5vw;
    background: #181818;
    border: none;
    outline: none;
    opacity: 0;
}

.pre-btn {
    left: -2.5vw;
}

.poke-types {
  font-size: 20px;
  font-weight: 500;
  margin-bottom: 20px;
  text-transform: capitalize;
}

.poke-container {
  width: 100%;
  height: 200px;
  display: flex;
  align-items: center;
  overflow-x: auto;
  overflow-y: hidden;
  scroll-behavior: smooth;
}

.poke {
  flex: 0 0 auto;
  width: 24%;
  height: 200px;
  text-align: center;
  margin-right: 10px;
  cursor: pointer;
  position: relative;
}

.home{
  background-image: url('../image/pika.jpg');
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
}

.container {
  width: 100%;
  text-align: center;
  
  /* By setting this div's display to flex, 
     I get access to Flexbox's properties. 
     I can now use these properties to manipulate
     the children of this div. */
  display: flex;
  
  /* This is will center this div's children to the left. */
  justify-content: left;
  
  /* flex-wrap acts much like a code editor's soft wrapping feature. */
  flex-wrap: wrap;
}

.movie__card {
  margin: 1em;
  background: black;
  text-align: center;
  font-family: monospace;
  color: white;
  font-weight: bolder;
  
  /* Children whose parent has `display: flex` also gain access to Flexbox 
     properties. */
  flex: 0;
  
  /* By setting width as a percentage and having a min-width property, you 
     enable your movie cards to have a larger width when the viewport is 
     larger and prevent them from getting too small when the viewport 
     is smaller, such as on a mobile viewport. */
  width: 15%;
  min-width: 110px;
  
  height: 200px;
  padding-bottom: 30px;
}
img{
    margin-top: 5px;
}

.movie_date{
    color: red;
}

.tvshow_date{
  color:blue;
}

.movie__image{
    height: 150px;
    width: 100px;
}

.movie__title{
  margin-bottom: 1em;
}

#customers {
  font-family: Arial, Helvetica, sans-serif;
  border-collapse: collapse;
  width: 100%;
}

#customers td, #customers th {
  border: 1px solid #ddd;
  padding: 8px;
}

table, th, td {
  border: 1px solid black;
}

table{
  margin-top:10px;
  margin-bottom:10px;
}
#pokemon th {
  padding-top: 12px;
  padding-bottom: 12px;
  text-align: left;
  background-color: #000000;
  color: white;
  font-size: bolder;
  padding:5px;
}
#pokemon td {
  background-color: white;
}
#pokemon td img {
  max-width: 50px;
  max-height: 50px;
}


.wrapper {
  text-align: center;
}
.center {
  max-width: 400px;
  display: inline-block;
}

.imagediv{
  height:300px;
  width:300px;
  border:1px solid black;
  background-color: white;
}
.imagediv img{
  min-height: 100%;
  min-width: 100%;
}

.title{
  font-size: 50px;
  background-color:black;
  color: white;
  font-weight: bold;
}
.pad{
  padding-top: 50px;
}

input{
  margin-top:10px;
  margin-bottom:10px;
}
button{
  margin-top:10px;
  margin-bottom:10px;
}

* {
  box-sizing: border-box;
}

.column {
  float: left;
  width: 33.33%;
  padding: 5px;
}
.column img{
  max-width: 50px;
  max-height: 50px;
}
.black-back{
  color: white;
  background-color:black;
  font-weight: bold;
}

.divBorder{
  border-top: 1px solid;
}

/* Clearfix (clear floats) */
.row::after {
  content: "";
  clear: both;
  display: table;
}